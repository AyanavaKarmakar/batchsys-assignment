import Head from "next/head";
import { type Product } from "../utils/ProductSchema";
import { ProductCard1, ProductCard2 } from "../components";
import { useState } from "react";
import clsx from "clsx";

export default function Products({ products }: { products: Product[] }) {
  const [isHorizontal, setIsHorizontal] = useState(true);
  const [isCard1, setIsCard1] = useState(true);

  const toggleScrollDirection = () => {
    setIsHorizontal(!isHorizontal);
  };

  return (
    <>
      <Head>
        <title>Products</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="flex flex-col gap-3 items-center justify-center ">
        <button
          onClick={toggleScrollDirection}
          className="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-4"
        >
          Toggle Scroll Direction
        </button>

        <ProductCard1 product={products[0]} />

        {!isCard1 && (
          <div className="p-4">
            <div
              className={clsx(
                isHorizontal
                  ? "flex overflow-x-scroll gap-3 w-screen"
                  : "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4"
              )}
            >
              {products?.map((product) => (
                <div key={product.id} className="flex-shrink-0">
                  <ProductCard2 product={product} />
                </div>
              ))}
            </div>
          </div>
        )}
      </main>
    </>
  );
}

export async function getServerSideProps() {
  try {
    const res = await fetch("https://dummyjson.com/products");
    const data = await res.json();

    // Ensure that the data is an array of products
    const products: Product[] = Array.isArray(data.products)
      ? data.products
      : [];

    return { props: { products } };
  } catch (error) {
    console.error(error);
    return { props: { products: [] } };
  }
}
