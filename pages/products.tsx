import Head from "next/head";
import { type Product } from "../utils/ProductSchema";
import { ProductCard1, ProductCard2 } from "../components";
import { useEffect, useState } from "react";
import { useCardTypeStore } from "../store/cardTypeStore";
import { useScrollTypeStore } from "../store/scrollTypeStore";
import clsx from "clsx";

// handle pagination
const itemsPerPage = 10;
const fetchProducts = async (offset: number, limit: number) => {
  const response = await fetch(
    `https://dummyjson.com/products?skip=${offset}&limit=${limit}`
  );
  const data = await response.json();
  return data.products || [];
};

export default function Products({ products }: { products: Product[] }) {
  const [productList, setProductList] = useState(products);
  const [page, setPage] = useState(0);
  const cardType = useCardTypeStore((state) => state.cardType);
  const scrollType = useScrollTypeStore((state) => state.scrollType);

  // handle pagination
  useEffect(() => {
    (async () => {
      const newProducts = await fetchProducts(
        page * itemsPerPage,
        itemsPerPage
      );

      setProductList((prevProducts) => [...prevProducts, ...newProducts]);
    })();
  }, [page]);

  const handleLoadMore = () => {
    setPage((prevPage) => prevPage + 1);
  };

  return (
    <>
      <Head>
        <title>Products</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="flex flex-col gap-3 items-center justify-center min-h-screen">
        {cardType === "Card1" ? (
          <div className="p-4">
            <div
              className={clsx(
                scrollType === "Horizontal"
                  ? "flex overflow-x-scroll gap-3 w-screen"
                  : "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4"
              )}
            >
              {productList?.map((product, index) => (
                <div key={index} className="flex-shrink-0">
                  <ProductCard1 product={product} />
                </div>
              ))}
            </div>
          </div>
        ) : (
          <div className="p-4">
            <div
              className={clsx(
                scrollType === "Horizontal"
                  ? "flex overflow-x-scroll gap-3 w-screen"
                  : "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4"
              )}
            >
              {productList?.map((product, index) => (
                <div key={index} className="flex-shrink-0">
                  <ProductCard2 product={product} />
                </div>
              ))}
            </div>
          </div>
        )}

        <button
          onClick={handleLoadMore}
          className="bg-primary-light dark:bg-primary-dark my-5 p-2 rounded-md text-lg font-semibold dark:border-none border-2 border-solid border-black"
        >
          Load More
        </button>
      </main>
    </>
  );
}

export async function getServerSideProps() {
  try {
    const initialProducts = await fetchProducts(0, itemsPerPage);

    // Ensure that the data is an array of products
    const products = Array.isArray(initialProducts) ? initialProducts : [];

    return { props: { products } };
  } catch (error) {
    console.error(error);
    return { props: { products: [] } };
  }
}
